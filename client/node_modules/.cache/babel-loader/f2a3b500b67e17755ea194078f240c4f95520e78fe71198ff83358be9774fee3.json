{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentPoll: null,\n  pollResults: null,\n  isPollActive: false,\n  timeRemaining: 60,\n  pastPolls: []\n};\nexport const pollSlice = createSlice({\n  name: 'poll',\n  initialState,\n  reducers: {\n    setCurrentPoll: (state, action) => {\n      state.currentPoll = action.payload;\n      state.isPollActive = true;\n      state.timeRemaining = action.payload.timeLimit || 60;\n    },\n    setPollResults: (state, action) => {\n      state.pollResults = action.payload;\n    },\n    endPoll: state => {\n      state.isPollActive = false;\n      state.currentPoll = null;\n      state.timeRemaining = 60;\n    },\n    updateTimeRemaining: (state, action) => {\n      state.timeRemaining = action.payload;\n    },\n    addPastPoll: (state, action) => {\n      state.pastPolls.push(action.payload);\n    },\n    resetPoll: state => {\n      return initialState;\n    }\n  }\n});\nexport const {\n  setCurrentPoll,\n  setPollResults,\n  endPoll,\n  updateTimeRemaining,\n  addPastPoll,\n  resetPoll\n} = pollSlice.actions;\nexport default pollSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentPoll","pollResults","isPollActive","timeRemaining","pastPolls","pollSlice","name","reducers","setCurrentPoll","state","action","payload","timeLimit","setPollResults","endPoll","updateTimeRemaining","addPastPoll","push","resetPoll","actions","reducer"],"sources":["/Users/himabindu/Desktop/Live-polling-system/client/src/store/pollSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  currentPoll: null,\n  pollResults: null,\n  isPollActive: false,\n  timeRemaining: 60,\n  pastPolls: [],\n};\n\nexport const pollSlice = createSlice({\n  name: 'poll',\n  initialState,\n  reducers: {\n    setCurrentPoll: (state, action) => {\n      state.currentPoll = action.payload;\n      state.isPollActive = true;\n      state.timeRemaining = action.payload.timeLimit || 60;\n    },\n    setPollResults: (state, action) => {\n      state.pollResults = action.payload;\n    },\n    endPoll: (state) => {\n      state.isPollActive = false;\n      state.currentPoll = null;\n      state.timeRemaining = 60;\n    },\n    updateTimeRemaining: (state, action) => {\n      state.timeRemaining = action.payload;\n    },\n    addPastPoll: (state, action) => {\n      state.pastPolls.push(action.payload);\n    },\n    resetPoll: (state) => {\n      return initialState;\n    },\n  },\n});\n\nexport const {\n  setCurrentPoll,\n  setPollResults,\n  endPoll,\n  updateTimeRemaining,\n  addPastPoll,\n  resetPoll,\n} = pollSlice.actions;\n\nexport default pollSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,EAAE;EACjBC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EACnCQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACT,WAAW,GAAGU,MAAM,CAACC,OAAO;MAClCF,KAAK,CAACP,YAAY,GAAG,IAAI;MACzBO,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACC,OAAO,CAACC,SAAS,IAAI,EAAE;IACtD,CAAC;IACDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,OAAO,EAAGL,KAAK,IAAK;MAClBA,KAAK,CAACP,YAAY,GAAG,KAAK;MAC1BO,KAAK,CAACT,WAAW,GAAG,IAAI;MACxBS,KAAK,CAACN,aAAa,GAAG,EAAE;IAC1B,CAAC;IACDY,mBAAmB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDK,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,SAAS,CAACa,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC;IACtC,CAAC;IACDO,SAAS,EAAGT,KAAK,IAAK;MACpB,OAAOV,YAAY;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXS,cAAc;EACdK,cAAc;EACdC,OAAO;EACPC,mBAAmB;EACnBC,WAAW;EACXE;AACF,CAAC,GAAGb,SAAS,CAACc,OAAO;AAErB,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}